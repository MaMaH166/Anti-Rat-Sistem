import os
import hashlib
import psutil
import time
from datetime import datetime

# Список известных сигнатур RAT (хэши MD5 для примера, в реальности нужно больше данных)
KNOWN_RAT_SIGNATURES = {
    "e8d5e9c8f8f8e8d5e9c8f8f8e8d5e9c8": "Generic RAT",
    "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6": "DarkComet RAT"
}

# Функция для вычисления MD5-хэша файла
def calculate_md5(file_path):
    try:
        with open(file_path, "rb") as f:
            file_content = f.read()
            return hashlib.md5(file_content).hexdigest()
    except Exception as e:
        print(f"Error reading {file_path}: {e}")
        return None

# Функция для сканирования файлов в директории
def scan_directory(directory):
    print(f"Scanning directory: {directory}")
    for root, _, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            file_hash = calculate_md5(file_path)
            if file_hash in KNOWN_RAT_SIGNATURES:
                print(f"ALERT: Detected {KNOWN_RAT_SIGNATURES[file_hash]} in {file_path}")
            else:
                print(f"File {file_path} is clean")

# Функция для мониторинга сетевой активности
def monitor_network_activity():
    print("Monitoring network activity...")
    while True:
        connections = psutil.net_connections()
        for conn in connections:
            if conn.status == 'ESTABLISHED' and conn.raddr:  # Проверяем активные соединения
                print(f"Connection detected: Local={conn.laddr} Remote={conn.raddr}")
                # Простая эвристика: если порт подозрительный (например, часто используемый RAT)
                suspicious_ports = [4444, 5555, 6666]  # Примеры портов
                if conn.laddr.port in suspicious_ports or conn.raddr.port in suspicious_ports:
                    print(f"ALERT: Suspicious connection on port {conn.laddr.port} or {conn.raddr.port}")
        time.sleep(5)  # Проверка каждые 5 секунд

# Главная функция Anti-RAT-System
def anti_rat_system():
    print("Starting Anti-RAT-System...")
    print(f"Current time: {datetime.now()}")

    # Сканирование системной папки (например, C:\Windows на Windows)
    scan_directory("C:\\Windows")  # Укажите нужный путь для вашей ОС

    # Запуск мониторинга сети
    monitor_network_activity()

if __name__ == "__main__":
    try:
        anti_rat_system()
    except KeyboardInterrupt:
        print("Anti-RAT-System stopped by user.")
    except Exception as e:
        print(f"Error in Anti-RAT-System: {e}")
